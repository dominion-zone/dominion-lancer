
let prim = import! lancer.test_cluster.builder.prim
let tcb @ { Builder } = import! lancer.test_cluster.builder
let { Result } = import! std.result
let r @ { ReportBuilder, FinalReport, finalize } = import! lancer.test_cluster.report
let { Result } = import! std.result
let effect @ { Eff, ? } = import! std.effect
let { Lift, run_lift, lift, ? } = import! std.effect.lift

// let scenario: Builder -> Result String StopMarker = import! "scenario.glu"

let scenario c: Builder -> Eff [| lift : Lift IO | r |] =
    do c = c.build ()
    do c = c.commit ()
    c.finalize ()

let run builder : prim.TestClusterBuilder -> IO FinalReport =
    let builder = tcb.make builder
    do _ = scenario builder
    Ok (finalize rb)

run