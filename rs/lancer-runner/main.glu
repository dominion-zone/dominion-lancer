let { Result } = import! std.result
let effect @ { Eff, ? } = import! std.effect
let { Lift, run_lift, lift, ? } = import! std.effect.lift
let { error } = import! std.prim
let { wrap } = import! std.applicative

let { TestCluster } = import! lancer.test_cluster
let { TestClusterBuilder } = import! lancer.test_cluster.builder
// let tcbi = import! impl.test_cluster.builder
// let { FinalReport } = import! lancer.test_cluster.report
let io @ { ? } = import! std.io

let { State } = import! impl.state

let run builder : TestClusterBuilder -> IO String =
    io.println "Running test cluster..."
    wrap "Re"

run