let { TestCluster } = import! lancer.test_cluster
let { TempWallet, get_keys } = import! lancer.temp_wallet
let d @ { Demonstration } = import! lancer.test_cluster.demonstration
let prim = import! lancer.test_cluster.prim
let { (<|) } = import! std.function
let effect @ { Eff, ? } = import! std.effect
let { Lift, run_lift, lift, ? } = import! std.effect.lift
let { State, eval_state, modify, ? } = import! std.effect.state

type Preparation = {
    cluster: TestCluster,
    commit: () -> Eff [| lift : Lift IO | r |] Demonstration,
}

{
    Preparation,
}