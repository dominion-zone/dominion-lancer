let effect @ { Eff, ? } = import! std.effect
let { read_file_to_string, ? } = import! lancer.effect.file_system
let { log, ? } = import! lancer.effect.logger
let { Reporting } = import! lancer.reporting
let { deserialize } = import! std.json.de
let { (<|), (<<) } = import! std.function
let { unwrap_ok, Result } = import! std.result
let { ObjectPtr, ? } = import! lancer.sui.object

let {
    TestCluster,
    initialize,
    commit_preparation,
    commit_demonstration,
    generate_keypair,
    execute_tx,
    get_coins,
    get_balance,
} = import! lancer.effect.test_cluster

do file = read_file_to_string "objects/enclave_config.json"
match deserialize file with
| Ok x -> log <| "Enclave config loaded successfully"
| Err e -> log <| "Failed to load enclave config: " ++ show e

initialize
commit_preparation []
commit_demonstration "" Public
